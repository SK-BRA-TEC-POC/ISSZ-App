apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.atos.issr"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        setProperty("archivesBaseName", "ISSR_Mobile-$versionName")
        ndk {
            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    Properties localProps = new Properties()
    localProps.load(new FileInputStream(file('../local.properties')))

    signingConfigs {
        apkSign {
            keyAlias "${localProps['key.alias']}"
            keyPassword "${localProps['key.password']}"
            storeFile file("${localProps['store.file']}")
            storePassword "${localProps['store.password']}"
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        releasePROD {
            initWith release
            buildConfigField "String", "SERVER_BASE_URL", "\"https://upsvar.test.sk/services/\""
            signingConfig signingConfigs.apkSign
        }

        releaseDEMO {
            initWith release
            buildConfigField "String", "SERVER_BASE_URL", "\"https://upsvar.test.sk/services/\""
            signingConfig signingConfigs.apkSign
        }


        debug {
            buildConfigField "String", "SERVER_BASE_URL", "\"http://upsvar.test.sk/services/\""
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.apkSign
        }

    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

}

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        def archiveBuildName
        def buildVariantName = variant.buildType.name

        if (buildVariantName == "releasePROD") {
            archiveBuildName = "PROD"
        } else if (buildVariantName == "releaseDEMO") {
            archiveBuildName = "DEMO"
        } else if (buildVariantName == "release") {
            archiveBuildName = "Release"
        } else if (buildVariantName == "debug") {
            archiveBuildName = "DEBUG"
        } else {
            archiveBuildName = "build"
        }
        buildConfigField "String", "APP_BUILD_TYPE", "\"$archiveBuildName\""

        def date
        def currentDate = new Date()
        date = currentDate.format('yyyy_MM_dd')

        output.outputFileName = getProperty("archivesBaseName") + "-" + archiveBuildName + "-" + date + ".apk"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.9.4'
    implementation 'com.squareup.okhttp3:okhttp:3.14.1'
    implementation 'io.reactivex:rxjava:1.1.6'
    implementation 'io.reactivex:rxandroid:1.0.1'
    implementation ('com.microblink:blinkid:5.4.0@aar') {
        transitive = true
    }
    implementation 'me.dm7.barcodescanner:zbar:1.9.13'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.google.android.material:material:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}